/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as authIndexImport } from './routes/(auth)/index'
import { Route as AuthenticatedSettingsImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/dashboard'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as auth500Import } from './routes/(auth)/500'

// Create Virtual Routes

const AuthenticatedSupportLazyImport = createFileRoute(
  '/_authenticated/support',
)()
const AuthenticatedSubscriptionsLazyImport = createFileRoute(
  '/_authenticated/subscriptions',
)()
const AuthenticatedReportsLazyImport = createFileRoute(
  '/_authenticated/reports',
)()
const AuthenticatedPaymentReportsLazyImport = createFileRoute(
  '/_authenticated/payment-reports',
)()
const AuthenticatedInvoicesLazyImport = createFileRoute(
  '/_authenticated/invoices',
)()
const AuthenticatedDriversLazyImport = createFileRoute(
  '/_authenticated/drivers',
)()
const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const authForgotPasswordLazyImport = createFileRoute(
  '/(auth)/forgot-password',
)()
const AuthenticatedUsersIndexLazyImport = createFileRoute(
  '/_authenticated/users/',
)()
const AuthenticatedInvoicesIndexLazyImport = createFileRoute(
  '/_authenticated/invoices/',
)()
const AuthenticatedHelpCenterIndexLazyImport = createFileRoute(
  '/_authenticated/help-center/',
)()
const AuthenticatedSubscriptionIdLazyImport = createFileRoute(
  '/_authenticated/subscription/$id',
)()

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const authIndexRoute = authIndexImport.update({
  id: '/(auth)/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSupportLazyRoute = AuthenticatedSupportLazyImport.update({
  id: '/support',
  path: '/support',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/support.lazy').then((d) => d.Route),
)

const AuthenticatedSubscriptionsLazyRoute =
  AuthenticatedSubscriptionsLazyImport.update({
    id: '/subscriptions',
    path: '/subscriptions',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/subscriptions.lazy').then((d) => d.Route),
  )

const AuthenticatedReportsLazyRoute = AuthenticatedReportsLazyImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/reports.lazy').then((d) => d.Route),
)

const AuthenticatedPaymentReportsLazyRoute =
  AuthenticatedPaymentReportsLazyImport.update({
    id: '/payment-reports',
    path: '/payment-reports',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/payment-reports.lazy').then((d) => d.Route),
  )

const AuthenticatedInvoicesLazyRoute = AuthenticatedInvoicesLazyImport.update({
  id: '/invoices',
  path: '/invoices',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/invoices.lazy').then((d) => d.Route),
)

const AuthenticatedDriversLazyRoute = AuthenticatedDriversLazyImport.update({
  id: '/drivers',
  path: '/drivers',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/drivers.lazy').then((d) => d.Route),
)

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const authForgotPasswordLazyRoute = authForgotPasswordLazyImport
  .update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsRoute = AuthenticatedSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const auth500Route = auth500Import.update({
  id: '/(auth)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUsersIndexLazyRoute =
  AuthenticatedUsersIndexLazyImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/users/index.lazy').then((d) => d.Route),
  )

const AuthenticatedInvoicesIndexLazyRoute =
  AuthenticatedInvoicesIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedInvoicesLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/invoices/index.lazy').then((d) => d.Route),
  )

const AuthenticatedHelpCenterIndexLazyRoute =
  AuthenticatedHelpCenterIndexLazyImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/help-center/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSubscriptionIdLazyRoute =
  AuthenticatedSubscriptionIdLazyImport.update({
    id: '/subscription/$id',
    path: '/subscription/$id',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/subscription/$id.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/500': {
      id: '/(auth)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof auth500Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/drivers': {
      id: '/_authenticated/drivers'
      path: '/drivers'
      fullPath: '/drivers'
      preLoaderRoute: typeof AuthenticatedDriversLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/invoices': {
      id: '/_authenticated/invoices'
      path: '/invoices'
      fullPath: '/invoices'
      preLoaderRoute: typeof AuthenticatedInvoicesLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/payment-reports': {
      id: '/_authenticated/payment-reports'
      path: '/payment-reports'
      fullPath: '/payment-reports'
      preLoaderRoute: typeof AuthenticatedPaymentReportsLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/reports': {
      id: '/_authenticated/reports'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof AuthenticatedReportsLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/subscriptions': {
      id: '/_authenticated/subscriptions'
      path: '/subscriptions'
      fullPath: '/subscriptions'
      preLoaderRoute: typeof AuthenticatedSubscriptionsLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/support': {
      id: '/_authenticated/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof AuthenticatedSupportLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/': {
      id: '/(auth)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authIndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/subscription/$id': {
      id: '/_authenticated/subscription/$id'
      path: '/subscription/$id'
      fullPath: '/subscription/$id'
      preLoaderRoute: typeof AuthenticatedSubscriptionIdLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/invoices/': {
      id: '/_authenticated/invoices/'
      path: '/'
      fullPath: '/invoices/'
      preLoaderRoute: typeof AuthenticatedInvoicesIndexLazyImport
      parentRoute: typeof AuthenticatedInvoicesLazyImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedInvoicesLazyRouteChildren {
  AuthenticatedInvoicesIndexLazyRoute: typeof AuthenticatedInvoicesIndexLazyRoute
}

const AuthenticatedInvoicesLazyRouteChildren: AuthenticatedInvoicesLazyRouteChildren =
  {
    AuthenticatedInvoicesIndexLazyRoute: AuthenticatedInvoicesIndexLazyRoute,
  }

const AuthenticatedInvoicesLazyRouteWithChildren =
  AuthenticatedInvoicesLazyRoute._addFileChildren(
    AuthenticatedInvoicesLazyRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRoute
  AuthenticatedDriversLazyRoute: typeof AuthenticatedDriversLazyRoute
  AuthenticatedInvoicesLazyRoute: typeof AuthenticatedInvoicesLazyRouteWithChildren
  AuthenticatedPaymentReportsLazyRoute: typeof AuthenticatedPaymentReportsLazyRoute
  AuthenticatedReportsLazyRoute: typeof AuthenticatedReportsLazyRoute
  AuthenticatedSubscriptionsLazyRoute: typeof AuthenticatedSubscriptionsLazyRoute
  AuthenticatedSupportLazyRoute: typeof AuthenticatedSupportLazyRoute
  AuthenticatedSubscriptionIdLazyRoute: typeof AuthenticatedSubscriptionIdLazyRoute
  AuthenticatedHelpCenterIndexLazyRoute: typeof AuthenticatedHelpCenterIndexLazyRoute
  AuthenticatedUsersIndexLazyRoute: typeof AuthenticatedUsersIndexLazyRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRoute,
  AuthenticatedDriversLazyRoute: AuthenticatedDriversLazyRoute,
  AuthenticatedInvoicesLazyRoute: AuthenticatedInvoicesLazyRouteWithChildren,
  AuthenticatedPaymentReportsLazyRoute: AuthenticatedPaymentReportsLazyRoute,
  AuthenticatedReportsLazyRoute: AuthenticatedReportsLazyRoute,
  AuthenticatedSubscriptionsLazyRoute: AuthenticatedSubscriptionsLazyRoute,
  AuthenticatedSupportLazyRoute: AuthenticatedSupportLazyRoute,
  AuthenticatedSubscriptionIdLazyRoute: AuthenticatedSubscriptionIdLazyRoute,
  AuthenticatedHelpCenterIndexLazyRoute: AuthenticatedHelpCenterIndexLazyRoute,
  AuthenticatedUsersIndexLazyRoute: AuthenticatedUsersIndexLazyRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/drivers': typeof AuthenticatedDriversLazyRoute
  '/invoices': typeof AuthenticatedInvoicesLazyRouteWithChildren
  '/payment-reports': typeof AuthenticatedPaymentReportsLazyRoute
  '/reports': typeof AuthenticatedReportsLazyRoute
  '/subscriptions': typeof AuthenticatedSubscriptionsLazyRoute
  '/support': typeof AuthenticatedSupportLazyRoute
  '/': typeof authIndexRoute
  '/subscription/$id': typeof AuthenticatedSubscriptionIdLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/invoices/': typeof AuthenticatedInvoicesIndexLazyRoute
  '/users': typeof AuthenticatedUsersIndexLazyRoute
}

export interface FileRoutesByTo {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/drivers': typeof AuthenticatedDriversLazyRoute
  '/payment-reports': typeof AuthenticatedPaymentReportsLazyRoute
  '/reports': typeof AuthenticatedReportsLazyRoute
  '/subscriptions': typeof AuthenticatedSubscriptionsLazyRoute
  '/support': typeof AuthenticatedSupportLazyRoute
  '/': typeof authIndexRoute
  '/subscription/$id': typeof AuthenticatedSubscriptionIdLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/invoices': typeof AuthenticatedInvoicesIndexLazyRoute
  '/users': typeof AuthenticatedUsersIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/500': typeof auth500Route
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRoute
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/_authenticated/drivers': typeof AuthenticatedDriversLazyRoute
  '/_authenticated/invoices': typeof AuthenticatedInvoicesLazyRouteWithChildren
  '/_authenticated/payment-reports': typeof AuthenticatedPaymentReportsLazyRoute
  '/_authenticated/reports': typeof AuthenticatedReportsLazyRoute
  '/_authenticated/subscriptions': typeof AuthenticatedSubscriptionsLazyRoute
  '/_authenticated/support': typeof AuthenticatedSupportLazyRoute
  '/(auth)/': typeof authIndexRoute
  '/_authenticated/subscription/$id': typeof AuthenticatedSubscriptionIdLazyRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/_authenticated/invoices/': typeof AuthenticatedInvoicesIndexLazyRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/dashboard'
    | '/settings'
    | '/forgot-password'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/drivers'
    | '/invoices'
    | '/payment-reports'
    | '/reports'
    | '/subscriptions'
    | '/support'
    | '/'
    | '/subscription/$id'
    | '/help-center'
    | '/invoices/'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/dashboard'
    | '/settings'
    | '/forgot-password'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/drivers'
    | '/payment-reports'
    | '/reports'
    | '/subscriptions'
    | '/support'
    | '/'
    | '/subscription/$id'
    | '/help-center'
    | '/invoices'
    | '/users'
  id:
    | '__root__'
    | '/_authenticated'
    | '/(auth)/500'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/_authenticated/dashboard'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/drivers'
    | '/_authenticated/invoices'
    | '/_authenticated/payment-reports'
    | '/_authenticated/reports'
    | '/_authenticated/subscriptions'
    | '/_authenticated/support'
    | '/(auth)/'
    | '/_authenticated/subscription/$id'
    | '/_authenticated/help-center/'
    | '/_authenticated/invoices/'
    | '/_authenticated/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  auth500Route: typeof auth500Route
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
  authIndexRoute: typeof authIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  auth500Route: auth500Route,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
  authIndexRoute: authIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/500",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/forgot-password",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503",
        "/(auth)/"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/dashboard",
        "/_authenticated/settings",
        "/_authenticated/drivers",
        "/_authenticated/invoices",
        "/_authenticated/payment-reports",
        "/_authenticated/reports",
        "/_authenticated/subscriptions",
        "/_authenticated/support",
        "/_authenticated/subscription/$id",
        "/_authenticated/help-center/",
        "/_authenticated/users/"
      ]
    },
    "/(auth)/500": {
      "filePath": "(auth)/500.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings.tsx",
      "parent": "/_authenticated"
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.lazy.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/_authenticated/drivers": {
      "filePath": "_authenticated/drivers.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/invoices": {
      "filePath": "_authenticated/invoices.lazy.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/invoices/"
      ]
    },
    "/_authenticated/payment-reports": {
      "filePath": "_authenticated/payment-reports.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reports": {
      "filePath": "_authenticated/reports.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/subscriptions": {
      "filePath": "_authenticated/subscriptions.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/support": {
      "filePath": "_authenticated/support.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/(auth)/": {
      "filePath": "(auth)/index.tsx"
    },
    "/_authenticated/subscription/$id": {
      "filePath": "_authenticated/subscription/$id.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/invoices/": {
      "filePath": "_authenticated/invoices/index.lazy.tsx",
      "parent": "/_authenticated/invoices"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
